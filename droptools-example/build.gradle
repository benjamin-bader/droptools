buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "nu.studer:gradle-jooq-plugin:8.2"
        classpath "com.github.johnrengelman:shadow:8.1.1"
    }
}

group = "com.bendb.droptools"
description = "blah"

apply plugin: "application"
apply plugin: "nu.studer.jooq"
apply plugin: "com.github.johnrengelman.shadow"

tasks.withType(PublishToMavenRepository).configureEach { it.enabled = false }

mainClassName = "com.bendb.example.ExampleApp"

run {
    args "server", "$projectDir/config/dev.yml"
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
}

dependencies {
    implementation project(":dropwizard-jooq")

    implementation libs.dropwizardCore
    implementation libs.dropwizardDb
    implementation "io.dropwizard.modules:dropwizard-flyway:3.0.0-1"

    implementation "com.google.auto.value:auto-value-annotations:1.10.1"
    annotationProcessor "com.google.auto.value:auto-value:1.10.1"

    implementation "org.postgresql:postgresql:$postgresPluginVersion"

    // For jOOQ
    jooqGenerator group: "org.postgresql", name: "postgresql", version: "$postgresPluginVersion"
}

jooq {
    version = jooqVersion // Leaving this in, because we can change the jOOQ version

    configurations {
        main {  // name of the jOOQ configuration
            generateSchemaSourceOnCompilation = true  // default (can be omitted)

            generationTool {
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = "jdbc:postgresql://localhost:5432/example_app"
                    user = "example_user"
                    password = "s3cr3t"
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'ex'
                        forcedTypes {
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'JSONB?'
                            }
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'INET'
                            }
                        }
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'com.bendb.example.db'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}
