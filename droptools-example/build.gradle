plugins {
    id "application"
    alias libs.plugins.jooq
    alias libs.plugins.shadow
}

group = "com.bendb.droptools"
description = "blah"

tasks.withType(PublishToMavenRepository).configureEach { it.enabled = false }

mainClassName = "com.bendb.example.ExampleApp"

run {
    args "server", "$projectDir/config/dev.yml"
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
}

dependencies {
    implementation project(":dropwizard-jooq")

    implementation libs.dropwizard.core
    implementation libs.dropwizard.db
    implementation libs.dropwizard.flyway

    implementation libs.autovalue.annotations
    annotationProcessor libs.autovalue.processor

    implementation libs.postgres

    // For jOOQ
    jooqGenerator libs.postgres
}

jooq {
    version = libs.versions.jooq.get() // Leaving this in, because we can change the jOOQ version

    configurations {
        main {  // name of the jOOQ configuration
            generateSchemaSourceOnCompilation = false

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.DEBUG

                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = "jdbc:postgresql://localhost:5432/example_app"
                    user = "example_user"
                    password = "s3cr3t"
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = "org.jooq.meta.postgres.PostgresDatabase"
                        inputSchema = "ex"
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = "com.bendb.example.db"
                    }
                }
            }
        }
    }
}
