buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.github.johnrengelman:shadow:8.1.1"
        classpath "org.postgresql:postgresql:$postgresPluginVersion"
        classpath group: 'org.jooq', name: 'jooq', version: jooqVersion
        classpath group: 'org.jooq', name: 'jooq-meta', version: jooqVersion
        classpath group: 'org.jooq', name: 'jooq-codegen', version: jooqVersion
    }
}

group = "com.bendb.droptools"
description = "blah"

apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"

tasks.withType(PublishToMavenRepository).configureEach { it.enabled = false }

mainClassName = "com.bendb.example.ExampleApp"

run {
    args "server", "$projectDir/config/dev.yml"
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
}

dependencies {
    implementation project(":dropwizard-jooq")

    implementation libs.dropwizardCore
    implementation libs.dropwizardDb
    implementation "io.dropwizard.modules:dropwizard-flyway:3.0.0-1"

    implementation "com.google.auto.value:auto-value-annotations:1.10.1"
    annotationProcessor "com.google.auto.value:auto-value:1.10.1"

    implementation "org.postgresql:postgresql:$postgresPluginVersion"

    // For jOOQ
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.5.1'
}

 import org.jooq.codegen.GenerationTool
 import org.jooq.meta.jaxb.*

 ext.genpath = new File("${projectDir}/src/generated/java")
 ext.jooqpath = new File("${projectDir}/src/generated/java/com/bendb/example/db/")

 sourceSets.main.java.srcDirs += genpath.toString()

 task generateJooq {
     doLast {
         if (!jooqpath.exists()) {
             jooqpath.mkdirs()
         }

         Configuration configuration = new Configuration()
                 .withJdbc(new Jdbc()
                         .withDriver('org.postgresql.Driver')
                         .withUrl('jdbc:postgresql://localhost:5432/example_app')
                         .withUser('example_user')
                         .withPassword('s3cr3t')
                 )
                 .withGenerator(new Generator()
                         .withGenerate(new Generate()
                                 .withDaos(true)
                                 .withPojos(true))
                         .withDatabase(new Database()
                                 .withName('org.jooq.meta.postgres.PostgresDatabase')
                                 .withIncludes(".*")
                                 .withExcludes("")
                                 .withInputSchema("ex")
                         )
                         .withTarget(new Target()
                                 .withPackageName('com.bendb.example.db')
                                 .withDirectory(genpath.toString())
                         )
                 );
         GenerationTool.generate(configuration);
     }
 }

 task deleteGeneratedJooqCode(type: Delete) {
     delete jooqpath
 }

 generateJooq.dependsOn(deleteGeneratedJooqCode)
